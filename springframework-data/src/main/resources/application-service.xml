<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx
        https://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    <context:component-scan base-package="com.yy.springframework.tx"/>
    <!--<context:property-placeholder location="classpath:jdbc.properties"/>-->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:jdbc-product.properties</value>
                <value>classpath:jdbc-user.properties</value>
            </list>
        </property>
    </bean>
    <bean id="productDataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <property name="driverClassName" value="${jdbc.product.driverClassName}"/>
        <property name="url" value="${jdbc.product.url}"/>
        <property name="username" value="${jdbc.product.username}"/>
        <property name="password" value="${jdbc.product.password}"/>
    </bean>
    <bean id="userDataSource" class="com.alibaba.druid.pool.DruidDataSource"
        init-method="init" destroy-method="close">
        <property name="driverClassName" value="${jdbc.user.driverClassName}"/>
        <property name="url" value="${jdbc.user.url}"/>
        <property name="username" value="${jdbc.user.username}"/>
        <property name="password" value="${jdbc.user.password}" />
    </bean>
    <bean id="dataSource" class="com.yy.springframework.tx.datasource.DynamicDataSource">
        <property name="targetDataSources">
            <map>
                <entry key="productDataSource" value-ref="productDataSource"/>
                <entry key="userDataSource" value-ref="userDataSource"/>
            </map>
        </property>
        <property name="defaultTargetDataSource" ref="productDataSource"/>
    </bean>

    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <tx:advice id="txAdvice" transaction-manager="txManager">
        <tx:attributes>
            <tx:method name="*WithTx"/>
        </tx:attributes>
    </tx:advice>
    <bean id="dataSourceAspect" class="com.yy.springframework.tx.aop.DataSourceAspect"/>
    <aop:config>
        <aop:pointcut id="pc" expression="execution(* com.yy.springframework.tx.service..*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pc" order="1"/>
        <aop:aspect ref="dataSourceAspect" order="0">
            <aop:around method="execute" pointcut-ref="pc"/>
        </aop:aspect>
    </aop:config>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <property name="mapperLocations">
            <list>
                <value>classpath:mapper/*.xml</value>
            </list>
        </property>
    </bean>
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.yy.springframework.tx.mapper"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>
</beans>